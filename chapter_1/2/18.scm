;; 1.18
(define (even? n)
  (= (remainder n 2) 0))
(define (d n b a)
  (display "===")
  (newline)
  (display "n = ")
  (display n)
  (newline)
  (display "b = ")
  (display b)
  (newline)
  (display "a = ")
  (display a)
  (newline)
  (display "===")
  (newline)
  (newline))

(define (fast-* a b)
  (define (double a)
    (+ a a))
  (define (halve a)
    (/ a 2))
  (define (iter a b c)
    ;(d b a c)
    (cond ((= b 0) c)
          ((even? b) (iter (double a) (halve b) c))
          (else (iter a (- b 1) (+ a c)))))
  (iter a b 0))
